/*!
 * @pixi/filter-twist - v3.1.1
 * Compiled Wed, 30 Dec 2020 18:30:18 UTC
 *
 * @pixi/filter-twist is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(o,n,r){"use strict";var t="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",e="varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform vec4 filterArea;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 twist(vec2 coord)\n{\n    coord -= offset;\n\n    float dist = length(coord);\n\n    if (dist < radius)\n    {\n        float ratioDist = (radius - dist) / radius;\n        float angleMod = ratioDist * ratioDist * angle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\n    }\n\n    coord += offset;\n\n    return coord;\n}\n\nvoid main(void)\n{\n\n    vec2 coord = mapCoord(vTextureCoord);\n\n    coord = twist(coord);\n\n    coord = unmapCoord(coord);\n\n    gl_FragColor = texture2D(uSampler, coord );\n\n}\n",i=function(o){function n(n){o.call(this,t,e),"number"==typeof n&&(n={radius:n},void 0!==arguments[1]&&(n.angle=arguments[1]),void 0!==arguments[2]&&(n.padding=arguments[2])),Object.assign(this,{radius:200,angle:4,padding:20,offset:new r.Point},n)}o&&(n.__proto__=o),n.prototype=Object.create(o&&o.prototype),n.prototype.constructor=n;var i={offset:{configurable:!0},radius:{configurable:!0},angle:{configurable:!0}};return i.offset.get=function(){return this.uniforms.offset},i.offset.set=function(o){this.uniforms.offset=o},i.radius.get=function(){return this.uniforms.radius},i.radius.set=function(o){this.uniforms.radius=o},i.angle.get=function(){return this.uniforms.angle},i.angle.set=function(o){this.uniforms.angle=o},Object.defineProperties(n.prototype,i),n}(n.Filter);return o.TwistFilter=i,o}({},PIXI,PIXI);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-twist.js.map
